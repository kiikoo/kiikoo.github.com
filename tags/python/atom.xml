<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: python | 阿宝的Blog]]></title>
  <link href="http://kiikoo.github.com/tags/python/atom.xml" rel="self"/>
  <link href="http://kiikoo.github.com/"/>
  <updated>2012-08-12T21:26:53+08:00</updated>
  <id>http://kiikoo.github.com/</id>
  <author>
    <name><![CDATA[阿宝]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何学习python]]></title>
    <link href="http://kiikoo.github.com/blog/2012/08/08/ru-he-xue-xi-python/"/>
    <updated>2012-08-08T22:23:00+08:00</updated>
    <id>http://kiikoo.github.com/blog/2012/08/08/ru-he-xue-xi-python</id>
    <content type="html"><![CDATA[<p>很多时候当我们开始学习一门新的语言时，总是遵从着这一步骤。但是，如果你准备学习Python，那么你首先要做的就是打破这一惯例。</p>

<!--more-->


<p>在Python的世界里，你不可能也没有一本书让你起步，因为关于Python学习的出版物实在是太少了，少到你根本找不到一本合适的（PS：当然，这里我撒谎了，其实还是有几本可以满足你的求知欲望）。</p>

<p>我学习Python是因为我不想再为了Java的“繁荣”而投入太多精力（PS：我从大学二年级开始了Java的历程，当时Java1.2刚刚发布，很多优秀的设计思想让我痴迷；但是到毕业时，我几乎荒废了他，他太过臃肿了。），也不想把因为别人的热捧而追从Ruby社区，更不想期待PHP6会有如何优秀的改进，所以我最终选择了 “简约而不简单”的Python作为一个目标（PS：要知道2008年，Python会发布一个全新重写的版本Python3000噢<sup>_<sup>）。偶然的一</sup></sup> 天，我看到《简明Python教程》这本书（PS：这是一本遵从创作共享协议的电子书，英文名为：《Byte of Python》），他的简约明了让我这个Python白菜很快的就了解了Python语言的基本原理和编程；当然，单单读懂《简明Python教程》是不够的，因为他仅仅是一本入门书。继而我又为了继续的学习寻找更好的书，去网上书店转了一圈也没发现什么有价值的参考，最后再圈子里询问。最终让我找到了另外一本伟大的电子书《深入Python》（PS：这也是一本遵从创作共享协议的电子书，不过他有印刷体版本可以购买，英文名为：《Dive into Python》），这是一本详细的Python编程语言“教科书”，如果你能读懂他，那么你的Python编程肯定是“小牛”级的了。</p>

<p>学过这些，我想基本是可以应对需求了，偶有不解你就要进一步阅读Python手册咯:-)如果你读过这两本书并且读懂了这两本书，还想继续有所学习的话，那麽我推荐给你另外一本印刷体的图书《Python网络编程》（PS：要知道他的作者是一位Debian Linux的资深开发者John Goerzen(美)），这是由电子工业出版社社翻译出版的一本书，主要关于Python网络方面的设计编程，翻译质量亦不错噢。</p>

<p>当你读完这三本书后，基本上你就是“中牛”，缺乏的只是积累和经验。</p>

<p><a href="http://www.zzbaike.com/wiki/%E6%96%B0%E6%89%8B%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0Python">原文地址</a></p>
]]></content>
  </entry>
  
</feed>
